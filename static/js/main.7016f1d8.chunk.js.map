{"version":3,"sources":["constants/draftGradesPhotos sync /^/.//.*/.png$","constants/draftGradesPhotos/1.png","constants/draftGradesPhotos/10.png","constants/draftGradesPhotos/2.png","constants/draftGradesPhotos/3.png","constants/draftGradesPhotos/4.png","constants/draftGradesPhotos/5.png","constants/draftGradesPhotos/6.png","constants/draftGradesPhotos/7.png","constants/draftGradesPhotos/8.png","constants/draftGradesPhotos/9.png","components/Team.js","components/Teams.js","components/Nav.js","components/About.js","components/Matchup.js","components/Matchups.js","components/HeadToHead.js","components/DraftGrades.js","football.webp","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Team","props","team","players","starters","display_name","settings","wins","losses","fpts","fpts_against","bench","filter","player","includes","nflPlayers","className","position","first_name","last_name","Teams","teams","avgFpts","avgFptsAgainst","useState","sort","setSort","selector","htmlFor","value","onChange","target","label","option","sortBy","display","a","b","index","genDisplay","Nav","to","About","Matchup","console","log","matchup","player1","player2","player1Bench","player2Bench","points","players_points","Matchups","weekOfMatchups","matchupWeeks","week","setWeek","allMatchups","matchups","i","push","rosterID","roster_id","getUsername","matchup_id","getMatchups","HeadToHead","playerOne","setPlayerOne","playerTwo","setPlayerTwo","playerOneDropdown","setPlayerOneDropdown","playerTwoDropdown","setPlayerTwoDropdown","playerOneWins","playerTwoWins","playerOneTotalPoints","playerTwoTotalPoints","matchUpStats","setMatchUpStats","useEffect","masterCalc","playerOneMatchesTemp","match","playerTwoMatchesTemp","calcMatches","stats","forEach","parseInt","toFixed","calcStats","getHeadToHeadHistory","player1Matches","player2Matches","length","handleChange","person","src","require","default","App","setTeams","setNflPlayers","setAvgFpts","setAvgFptsAgainst","setMatchupWeeks","fetch","then","resp","json","getTeamNames","Promise","all","owner_id","updatedData","avgPointsScored","reduce","avgPointsScoredAgainst","headers","weekMatchups","prevMatchUps","getRosterInfo","getNflPlayers","getMatchupHistory","alt","football","exact","path","element","DraftGrades","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7016f1d8.chunk.js","sourcesContent":["var map = {\n\t\"./1.png\": 448,\n\t\"./10.png\": 449,\n\t\"./2.png\": 450,\n\t\"./3.png\": 451,\n\t\"./4.png\": 452,\n\t\"./5.png\": 453,\n\t\"./6.png\": 454,\n\t\"./7.png\": 455,\n\t\"./8.png\": 456,\n\t\"./9.png\": 457\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 447;","export default __webpack_public_path__ + \"static/media/1.b36eafcf.png\";","export default __webpack_public_path__ + \"static/media/10.a3b18b57.png\";","export default __webpack_public_path__ + \"static/media/2.e0830f8e.png\";","export default __webpack_public_path__ + \"static/media/3.c1001cd4.png\";","export default __webpack_public_path__ + \"static/media/4.34e24b82.png\";","export default __webpack_public_path__ + \"static/media/5.246a2a1f.png\";","export default __webpack_public_path__ + \"static/media/6.99abc8b7.png\";","export default __webpack_public_path__ + \"static/media/7.c2c31ed4.png\";","export default __webpack_public_path__ + \"static/media/8.9e49572d.png\";","export default __webpack_public_path__ + \"static/media/9.decaa3e6.png\";","import React from 'react'\n\nfunction Team(props) {\n    const { players, starters, display_name } = props.team\n    const { wins, losses, fpts, fpts_against } = props.team.settings\n    const bench = players.filter(player => !starters.includes(player))\n    const nflPlayers = props.nflPlayers\n    return (\n        <div className=\"roster-container\">\n            <h1>{display_name} ({wins}-{losses})</h1>\n\n            <h3 > Points Scored: {fpts} </h3>\n\n\n            <h3>Points Against: {fpts_against} </h3>\n            <h3> Starters: </h3>\n            <ol>\n                {starters.map(player => {\n                    //get name of player from nflPlayers\n                    //full_name doesn't exist for \n                    const { position, first_name, last_name } = nflPlayers[player] || {}\n                    return <li>{player !== '0' ? `${position}) ${first_name} ${last_name}` : 'Empty'}</li>\n                })}\n            </ol>\n            <h3> Bench: </h3>\n            <ol>\n                {bench.map(player => {\n                    const { position, first_name, last_name } = nflPlayers[player] || {}\n                    return <li>{player !== '0' ? `${position}) ${first_name} ${last_name}` : 'Empty'}</li>\n                })}\n            </ol>\n        </div>\n    )\n}\nexport default Team","import React, { useState } from 'react'\nimport '../index.css'\nimport Team from './Team'\n\nfunction Teams(props) {\n    const { teams, nflPlayers, avgFpts, avgFptsAgainst } = props\n    const [sort, setSort] = useState('descending')\n\n    function genDisplay(sortBy) {\n        let display\n        if (sortBy === 'ascending') {\n            display = teams.sort(function (a, b) {\n                return a.settings.wins - b.settings.wins\n            })\n        }\n        else if (sortBy === 'descending') {\n            display = teams.sort(function (a, b) {\n                return b.settings.wins - a.settings.wins\n            })\n        }\n        else if (sortBy === 'pointsScored') {\n            display = teams.sort(function (a, b) {\n                return b.settings.fpts - a.settings.fpts\n            })\n        }\n        else if (sortBy === 'pointsScoredAgainst') {\n            display = teams.sort(function (a, b) {\n                return b.settings.fpts_against - a.settings.fpts_against\n            })\n        }\n        return display.map((team, index) => {\n            return (\n                <Team key={index} team={team} nflPlayers={nflPlayers} avgFpts={avgFpts} avgFptsAgainst={avgFptsAgainst} />\n            )\n        })\n    }\n\n    const sortOptions = [\n        {\n            label: 'Winners',\n            value: 'descending'\n        },\n        {\n            label: 'Losers',\n            value: 'ascending'\n        },\n\n        {\n            label: 'Points Scored Against',\n            value: 'pointsScoredAgainst'\n        },\n        {\n            label: 'Points Scored',\n            value: 'pointsScored'\n        }\n    ]\n    const selector =\n        <div>\n            <label htmlFor=\"sorter\">Sort by: </label>\n            <select id=\"sorter\" value={sort} onChange={(e) => setSort(e.target.value)}>\n                {sortOptions.map(option => (\n                    <option value={option.value}>{option.label}</option>\n                ))}\n            </select >\n        </div >\n\n    return (\n        <div className='teams-container'>\n            <h2>General Stats!</h2>\n            {selector}\n            <h3>League Average Points Scored: {avgFpts}</h3>\n            {genDisplay(sort)}\n        </div>\n    )\n}\n\nexport default Teams","import React from 'react'\n\nimport {\n    Link,\n} from \"react-router-dom\";\n\nfunction Nav(props) {\n    const { teams, nflPlayers, avgFpts, avgFptsAgainst } = props\n    return (\n        <div className=\"nav-container\">\n            <Link to=\"/reactFantasyFootball\">Home</Link> <span>|</span>\n            <Link to=\"/about\">About League</Link><span>|</span>\n            <Link to=\"/matchups\">Matchups</Link><span>|</span>\n            <Link to=\"/headtohead\">Head to Head</Link><span>|</span>\n            <Link to=\"/draftGrades\">Draft Grades</Link>\n            {/* <Link to=\"/maxpointstotals\">Max Points </Link> */}\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react'\nimport Nav from './Nav'\nimport '../index.css'\n\nfunction About() {\n    return (\n        <div>\n            <p>This is the official webpage for the AK REDRAFT / AK DYNASTY football leages</p>\n            <p>The league was formed in 2018 and initially started as a redraft only</p>\n            <p>In 2021 we switched from the ESPN platform to Sleeper and introduced a Dynasty leage as well</p>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nfunction Matchup(props) {\n    console.log(props)\n    const { matchup } = props\n    const [player1, player2] = matchup\n    console.log(player1, player2)\n    const player1Bench = player1.players.filter(player => !player1.starters.includes(player))\n    const player2Bench = player2.players.filter(player => !player2.starters.includes(player))\n    const nflPlayers = props.nflPlayers\n\n    return (\n        <div className=\"matchup-container\">\n\n            <div className='roster-container'>\n                <h4>{player1.display_name} - {player1.points} points</h4>\n                <h3> Starters: </h3>\n                <ol>\n                    {player1.starters.map(player => {\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player1.players_points[player]} ` : 'Empty'}</li>\n                    })}\n                </ol>\n\n                <h3> Bench: </h3>\n                <ol>\n                    {player1Bench.map(player => {\n\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player1.players_points[player]}` : 'Empty'}</li>\n                    })}\n                </ol>\n            </div>\n\n            <p> vs </p>\n\n            <div className='roster-container'>\n                <h4>{player2.display_name} - {player2.points} points</h4>\n                <h3> Starters: </h3>\n                <ol>\n                    {player2.starters.map(player => {\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player2.players_points[player]}` : 'Empty'}</li>\n                    })}\n                </ol>\n\n                <h3> Bench: </h3>\n                <ol>\n                    {player2Bench.map(player => {\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player2.players_points[player]}` : 'Empty'}</li>\n                    })}\n                </ol>\n            </div>\n        </div>\n    )\n}\nexport default Matchup","import React, { useState } from 'react'\n\nimport Matchup from './Matchup'\n\nfunction Matchups(props) {\n    const { teams, nflPlayers, matchupWeeks } = props\n    const [week, setWeek] = useState(0)\n\n    function getUsername(teams, rosterID) {\n        const username = teams.filter(team => team.roster_id === rosterID)\n        return username[0].display_name\n    }\n\n\n    // THE BUG IS HERE...NOT DYNAMIC WITH PLAYOFFS AND NULL MATCHUP IDS\n    function getMatchups(week) {\n        console.log(week)\n        const matchups = []\n        for (let i = 1; i < 6; i++) {\n            matchups.push(week.filter(player => {\n                player.display_name = getUsername(teams, player.roster_id)\n                return player.matchup_id === i\n            }))\n        }\n        return matchups\n    }\n\n    const allMatchups = matchupWeeks.map(week => {\n        return getMatchups(week)\n    })\n\n    const genMatchupDisplay = (weekOfMatchups) => {\n        console.log(weekOfMatchups)\n        return weekOfMatchups.map(matchup => {\n            return (\n                <Matchup matchup={matchup} nflPlayers={nflPlayers} />\n            )\n        })\n    }\n\n    const selector =\n        <div>\n            <label htmlFor=\"sorter\">Sort by: </label>\n            <select id=\"sorter\" value={week} onChange={(e) => setWeek(e.target.value)}>\n                {allMatchups.map((week, index) => {\n                    if (index < 14) {\n                        return <option value={index}>{`Week ${index + 1}`}</option>\n                    }\n                })}\n                <option>Playoffs Round 1</option>\n            </select >\n\n        </div >\n\n\n    return (\n        <div className=\"allMatchups-container\">\n            <h2>Matchups!</h2>\n            {selector}\n            {genMatchupDisplay(allMatchups[week])}\n        </div>\n    )\n}\n\nexport default Matchups\n\n","import { getAllByAltText } from '@testing-library/react'\nimport React, { useState, useEffect } from 'react'\n\nfunction HeadToHead(props) {\n    const { teams, matchupWeeks } = props\n    const [playerOne, setPlayerOne] = useState(1)\n    const [playerTwo, setPlayerTwo] = useState(7)\n    const [playerOneDropdown, setPlayerOneDropdown] = useState(teams.filter(team => team.roster_id !== playerTwo))\n    const [playerTwoDropdown, setPlayerTwoDropdown] = useState(teams.filter(team => team.roster_id !== playerOne))\n    const [playerOneMatches, setPlayerOneMatches] = useState([])\n    const [playerTwoMatches, setPlayerTwoMatches] = useState([])\n    const [matchUpHistory, setMatchUpHistory] = useState([])\n    const [matchUpStats, setMatchUpStats] = useState(\n        {\n            playerOneWins: 0,\n            playerTwoWins: 0,\n            playerOneTotalPoints: 0,\n            playerTwoTotalPoints: 0\n        }\n    )\n\n    console.log(matchUpStats)\n\n    useEffect(() => {\n        masterCalc()\n    }, [playerOne, playerTwo])\n\n    const masterCalc = () => {\n        const [playerOneMatchesTemp, playerTwoMatchesTemp] = calcMatches()\n        console.log(playerOneMatchesTemp, playerTwoMatchesTemp)\n        calcStats(getHeadToHeadHistory(playerOneMatchesTemp, playerTwoMatchesTemp))\n\n    }\n\n    const getHeadToHeadHistory = (player1Matches, player2Matches) => {\n        const matchups = []\n        for (let i = 0; i < player1Matches.length; i++) {\n            if (player1Matches[i].matchup_id === player2Matches[i].matchup_id) {\n                matchups.push([player1Matches[i], player2Matches[i]])\n            }\n        }\n        return matchups\n    }\n\n    function calcMatches() {\n\n        console.log(`inside calcMathces...playerOne is ${playerOne}`)\n        const playerOneMatchesTemp = matchupWeeks.map(week => {\n            return week.filter(team => {\n                return team.roster_id === playerOne\n            })\n        }).map(match => {\n            const [matchObj] = match\n            return matchObj\n        })\n\n        const playerTwoMatchesTemp = matchupWeeks.map(week => {\n            return week.filter(team => {\n                return team.roster_id === playerTwo\n            })\n        }).map(match => {\n            const [matchObj] = match\n            return matchObj\n        })\n        return ([playerOneMatchesTemp, playerTwoMatchesTemp])\n    }\n\n    function calcStats(matchups) {\n        console.log(matchups)\n        let stats = {\n\n            playerOneWins: 0,\n            playerTwoWins: 0,\n            playerOneTotalPoints: 0,\n            playerTwoTotalPoints: 0\n        }\n\n        matchups.forEach(match => {\n            stats.playerOneTotalPoints += parseInt(match[0].points.toFixed(2))\n            stats.playerTwoTotalPoints += parseInt(match[1].points.toFixed(2))\n            if (match[0].points > match[1].points) {\n                stats.playerOneWins += 1\n            }\n            else if (match[1].points > match[0].points) {\n                stats.playerTwoWins += 1\n            }\n\n        })\n        console.log(matchUpStats === stats)\n        setMatchUpStats({ ...stats })\n    }\n\n    const handleChange = (e, player) => {\n        if (player === 1) {\n            setPlayerOne(parseInt(e.target.value))\n            setPlayerTwoDropdown(teams.filter(team => team.roster_id !== parseInt(e.target.value)))\n        }\n        else {\n            setPlayerTwo(parseInt(e.target.value))\n            setPlayerOneDropdown(teams.filter(team => team.roster_id !== parseInt(e.target.value)))\n        }\n    }\n\n    return (\n        <div>\n\n            <h2>Head to Head! (regular season)</h2>\n            <div className='matchup-container'>\n\n                <div className='roster-container'>\n                    <div>\n                        <label htmlFor=\"sorter\">Player 1: </label>\n                        <select\n                            value={playerOne}\n                            data-id=\"1\"\n                            id=\"sorter\" onChange={(e) => handleChange(e, 1)}>\n                            {playerOneDropdown.map((team) => (\n                                <option value={team.roster_id} >\n                                    {`${team.display_name}, ${team.roster_id}`}\n                                </option>\n                            ))}\n                        </select >\n                        {/* 0 is playerOne's spot in array */}\n                        <p>Wins: {matchUpStats.playerOneWins}</p>\n                        <p>Total Points: {matchUpStats.playerOneTotalPoints}</p>\n                        <p>Biggest Win:</p>\n                    </div>\n                </div>\n\n                <p>vs</p>\n\n                <div className='roster-container'>\n                    <div>\n                        <label htmlFor=\"sorter2\">Player 2: </label>\n                        <select\n                            value={playerTwo}\n                            data-id=\"2\"\n                            id=\"sorter2\" onChange={(e) => handleChange(e, 2)}>\n                            {playerTwoDropdown.map((team) => (\n                                <option value={team.roster_id} >\n                                    {`${team.display_name}, ${team.roster_id}`}\n                                </option>\n                            ))}\n                        </select >\n                        {/* 1 is playerTwos spot in array */}\n                        <p>Wins: {matchUpStats.playerTwoWins}</p>\n                        <p>Total Points: {matchUpStats.playerTwoTotalPoints}</p>\n                        <p>Biggest Win:</p>\n                    </div >\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeadToHead\n\n\n// when roster team is selected => show that teams stats against the other team that is selected\n// stats to show\n//   -wins vs opponenent\n//    total points scored against opponent\n//   biggest blowout score\n//   biggest loss score\n//    \n//    highest scoring player against opponenet?","import React from 'react'\nimport { draftGrades } from '../constants/constants'\n\nexport default ({ teams }) => {\n    console.log(teams)\n    return (\n        <div>\n            <p>These are dynasty draft grades, created by Matt in google sheets and imported here.</p>\n            <div className=\"draft-grades-container\">\n                {teams.map(person => {\n                    return <img src={require(`../constants/draftGradesPhotos/${person.roster_id}.png`).default}></img>\n                })}\n            </div>\n        </div>\n\n    )\n}\n// }require('../constants/draftGradesPhotos/GerryDraftGrade.png'\n\n\n// fetch(\"https://fantasy.espn.com/apis/v3/games/ffl/seasons/2021/segments/0/leaguedefaults/3?view=kona_player_info\", {\n//   \"headers\": {\n//     \"accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\n//     \"accept-language\": \"en-US,en;q=0.9\",\n//     \"if-none-match\": \"W/\\\"07401f153bc1bfe1e92e7523ffcb10fdd\\\"\",\n//     \"sec-ch-ua\": \"\\\" Not A;Brand\\\";v=\\\"99\\\", \\\"Chromium\\\";v=\\\"98\\\", \\\"Google Chrome\\\";v=\\\"98\\\"\",\n//     \"sec-ch-ua-mobile\": \"?0\",\n//     \"sec-ch-ua-platform\": \"\\\"Linux\\\"\",\n//     \"sec-fetch-dest\": \"document\",\n//     \"sec-fetch-mode\": \"navigate\",\n//     \"sec-fetch-site\": \"none\",\n//     \"sec-fetch-user\": \"?1\",\n//     \"upgrade-insecure-requests\": \"1\"\n//   },\n//   \"referrerPolicy\": \"strict-origin-when-cross-origin\",\n//   \"body\": null,\n//   \"method\": \"GET\",\n//   \"mode\": \"cors\",\n//   \"credentials\": \"include\"\n// });\n\n// var filters = {\n//     \"players\": {\n//         \"limit\": 1500,\n//         \"sortDraftRanks\": {\n//             \"sortPriority\": 100,\n//             \"sortAsc\": true,\n//             \"value\": \"STANDARD\"\n//         }\n//     }\n// };\n\n// var options = {\n//     \"headers\": {\n//         \"x-fantasy-filter\": JSON.stringify(filters)\n//     }\n// };\n\n// var playersTxt = UrlFetchApp.fetch(url, options).getContentText();","export default __webpack_public_path__ + \"static/media/football.b7968ad0.webp\";","import React, { useState, useEffect } from 'react'\nimport Teams from './components/Teams'\nimport Nav from './components/Nav'\nimport {\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nimport About from './components/About'\nimport Matchups from './components/Matchups'\nimport HeadToHead from './components/HeadToHead'\nimport DraftGrades from './components/DraftGrades';\nimport Playoffs from './components/Playoffs'\nimport MaxPointTotals from './components/MaxPointTotals';\nimport football from './football.webp'\n\n\nfunction App() {\n  const [teams, setTeams] = useState([])\n  const [nflPlayers, setNflPlayers] = useState({})\n  const [avgFpts, setAvgFpts] = useState(0)\n  const [avgFptsAgainst, setAvgFptsAgainst] = useState(0)\n  const [matchupWeeks, setMatchupWeeks] = useState([])\n\n  async function getRosterInfo() {\n    //pull all team info - players, roster_id, settings(points scored, etc....), starters\n    const teams = await fetch('https://api.sleeper.app/v1/league/735291736863129600/rosters').then(resp => resp.json())\n    const getTeamNames = async () => {\n      return Promise.all(teams.map(async team => {\n        const { display_name } = await fetch(`https://api.sleeper.app/v1/user/${team.owner_id}`).then(resp => resp.json())\n        return { ...team, display_name }\n      }))\n    }\n    const updatedData = await getTeamNames()\n    const avgPointsScored = updatedData.map(team => {\n      return team.settings.fpts\n    }).reduce((a, b) => a + b)\n    const avgPointsScoredAgainst = updatedData.map(team => {\n      return team.settings.fpts_against\n    }).reduce((a, b) => a + b)\n    setTeams(updatedData)\n    setAvgFpts(avgPointsScored / updatedData.length)\n    setAvgFptsAgainst(avgPointsScoredAgainst / updatedData.length)\n  }\n\n  async function getNflPlayers() {\n    //large file => each key matches 'player' from getRosterInfo, name is stored under 'full_name'\n    const players = await fetch('./nflPlayers.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n    console.log(players)\n    setNflPlayers(players)\n  }\n\n  async function getMatchupHistory() {\n    //this only works during active season => change week manually to 18 during offseason\n    const { week } = await fetch(\"https://api.sleeper.app/v1/state/nfl\").then(resp => resp.json())\n    console.log('current week of the NFL is week:', week)\n    // const getAllWeekMatchups = async () => {\n    //   return Promise.all()\n    // }\n    // i is the week....cannot be 0\n    for (let i = 1; i < 15; i++) {\n      const weekMatchups = await fetch(`https://api.sleeper.app/v1/league/735291736863129600/matchups/${i}`).then(resp => resp.json())\n      setMatchupWeeks(prevMatchUps => [...prevMatchUps, weekMatchups])\n    }\n\n  }\n\n  useEffect(() => {\n    getRosterInfo()\n    getNflPlayers()\n    getMatchupHistory()\n  }, [])\n\n  return (\n\n    <div className=\"app-container\">\n      <Nav />\n      <h1>AK Fantasy Football (only dynasty stats for now...)</h1>\n      <img className=\"banner-image\" alt=\"football\" src={football} />\n      <Routes>\n        <Route exact path='/reactFantasyFootball' element={<Teams\n          teams={teams}\n          nflPlayers={nflPlayers}\n          avgFpts={avgFpts}\n          avgFptsAgainst={avgFptsAgainst}\n        />} />\n\n        <Route path='/matchups' element={<Matchups\n          teams={teams}\n          nflPlayers={nflPlayers}\n          avgFpts={avgFpts}\n          avgFptsAgainst={avgFptsAgainst}\n          matchupWeeks={matchupWeeks}\n        />} />\n\n        <Route path='/headtohead' element={<HeadToHead\n          teams={teams}\n          nflPlayers={nflPlayers}\n          matchupWeeks={matchupWeeks}\n        />} />\n\n        <Route path='/about' element={<About />} />\n\n        <Route path='/draftGrades' element={<DraftGrades\n          teams={teams}\n          nflPlayers={nflPlayers}\n          matchupWeeks={matchupWeeks}\n        />} />\n\n        {/* <Route path='/maxpointstotals' element={<MaxPointTotals\n          teams={teams}\n          nflPlayers={nflPlayers}\n          matchupWeeks={matchupWeeks}\n        />} /> */}\n      </Routes>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}