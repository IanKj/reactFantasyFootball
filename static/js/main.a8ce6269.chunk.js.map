{"version":3,"sources":["components/Team.js","components/Teams.js","components/Nav.js","components/About.js","components/Matchup.js","components/Matchups.js","components/HeadToHead.js","components/Playoffs.js","football.webp","App.js","reportWebVitals.js","index.js"],"names":["Team","props","team","players","starters","display_name","settings","wins","losses","fpts","fpts_against","bench","filter","player","includes","nflPlayers","className","map","position","first_name","last_name","Teams","teams","avgFpts","avgFptsAgainst","useState","sort","setSort","selector","htmlFor","id","value","onChange","e","target","label","option","sortBy","display","a","b","index","genDisplay","Nav","to","About","Matchup","console","log","matchup","player1","player2","player1Bench","player2Bench","points","players_points","Matchups","matchupWeeks","weekOfMatchups","week","setWeek","allMatchups","matchups","i","push","rosterID","roster_id","getUsername","matchup_id","getMatchups","HeadToHead","playerOne","setPlayerOne","playerTwo","setPlayerTwo","playerOneDropdown","setPlayerOneDropdown","playerTwoDropdown","setPlayerTwoDropdown","playerOneWins","playerTwoWins","playerOneTotalPoints","playerTwoTotalPoints","matchUpStats","setMatchUpStats","useEffect","masterCalc","playerOneMatchesTemp","match","playerTwoMatchesTemp","calcMatches","stats","forEach","parseInt","toFixed","calcStats","getHeadToHeadHistory","player1Matches","player2Matches","length","handleChange","Playoffs","fetch","then","resp","json","data","App","setTeams","setNflPlayers","setAvgFpts","setAvgFptsAgainst","setMatchupWeeks","getTeamNames","Promise","all","owner_id","updatedData","avgPointsScored","reduce","avgPointsScoredAgainst","headers","weekMatchups","prevMatchUps","getRosterInfo","getNflPlayers","getMatchupHistory","alt","src","football","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8ce6269.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Team(props) {\n    const { players, starters, display_name } = props.team\n    const { wins, losses, fpts, fpts_against } = props.team.settings\n    const bench = players.filter(player => !starters.includes(player))\n    const nflPlayers = props.nflPlayers\n    return (\n        <div className=\"roster-container\">\n            <h1>{display_name} ({wins}-{losses})</h1>\n\n            <h3 > Points Scored: {fpts} </h3>\n\n\n            <h3>Points Against: {fpts_against} </h3>\n            <h3> Starters: </h3>\n            <ol>\n                {starters.map(player => {\n                    //get name of player from nflPlayers\n                    //full_name doesn't exist for \n                    const { position, first_name, last_name } = nflPlayers[player] || {}\n                    return <li>{player !== '0' ? `${position}) ${first_name} ${last_name}` : 'Empty'}</li>\n                })}\n            </ol>\n            <h3> Bench: </h3>\n            <ol>\n                {bench.map(player => {\n                    const { position, first_name, last_name } = nflPlayers[player] || {}\n                    return <li>{player !== '0' ? `${position}) ${first_name} ${last_name}` : 'Empty'}</li>\n                })}\n            </ol>\n        </div>\n    )\n}\nexport default Team","import React, { useState } from 'react'\nimport '../index.css'\nimport Team from './Team'\n\nfunction Teams(props) {\n    const { teams, nflPlayers, avgFpts, avgFptsAgainst } = props\n    const [sort, setSort] = useState('descending')\n\n    function genDisplay(sortBy) {\n        let display\n        if (sortBy === 'ascending') {\n            display = teams.sort(function (a, b) {\n                return a.settings.wins - b.settings.wins\n            })\n        }\n        else if (sortBy === 'descending') {\n            display = teams.sort(function (a, b) {\n                return b.settings.wins - a.settings.wins\n            })\n        }\n        else if (sortBy === 'pointsScored') {\n            display = teams.sort(function (a, b) {\n                return b.settings.fpts - a.settings.fpts\n            })\n        }\n        else if (sortBy === 'pointsScoredAgainst') {\n            display = teams.sort(function (a, b) {\n                return b.settings.fpts_against - a.settings.fpts_against\n            })\n        }\n        return display.map((team, index) => {\n            return (\n                <Team key={index} team={team} nflPlayers={nflPlayers} avgFpts={avgFpts} avgFptsAgainst={avgFptsAgainst} />\n            )\n        })\n    }\n\n    const sortOptions = [\n        {\n            label: 'Winners',\n            value: 'descending'\n        },\n        {\n            label: 'Losers',\n            value: 'ascending'\n        },\n\n        {\n            label: 'Points Scored Against',\n            value: 'pointsScoredAgainst'\n        },\n        {\n            label: 'Points Scored',\n            value: 'pointsScored'\n        }\n    ]\n    const selector =\n        <div>\n            <label htmlFor=\"sorter\">Sort by: </label>\n            <select id=\"sorter\" value={sort} onChange={(e) => setSort(e.target.value)}>\n                {sortOptions.map(option => (\n                    <option value={option.value}>{option.label}</option>\n                ))}\n            </select >\n        </div >\n\n    return (\n        <div>\n            <h2>General Stats!</h2>\n            {selector}\n            <h3>League Average Points Scored: {avgFpts}</h3>\n            {genDisplay(sort)}\n        </div>\n    )\n}\n\nexport default Teams","import React from 'react'\n\nimport {\n    Link,\n} from \"react-router-dom\";\n\nfunction Nav(props) {\n    const { teams, nflPlayers, avgFpts, avgFptsAgainst } = props\n    return (\n        <div className=\"nav-container\">\n            <Link to=\"/\">Home</Link> <span>|</span>\n            <Link to=\"/about\">About League</Link><span>|</span>\n            <Link to=\"/matchups\">Matchups</Link><span>|</span>\n            <Link to=\"/headtohead\">Head to Head</Link><span>|</span>\n            <Link to=\"/playoffs\">Playoffs</Link>\n            {/* <Link to=\"/maxpointstotals\">Max Points </Link> */}\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react'\nimport Nav from './Nav'\nimport '../index.css'\n\nfunction About() {\n    return (\n        <div>\n            <p>This is the official webpage for the AK REDRAFT / AK DYNASTY football leages</p>\n            <p>The league was formed in 2018 and initially started as a redraft only</p>\n            <p>In 2021 we switched from the ESPN platform to Sleeper and introduced a Dynasty leage as well</p>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nfunction Matchup(props) {\n    console.log(props)\n    const { matchup } = props\n    const [player1, player2] = matchup\n    console.log(player1, player2)\n    const player1Bench = player1.players.filter(player => !player1.starters.includes(player))\n    const player2Bench = player2.players.filter(player => !player2.starters.includes(player))\n    const nflPlayers = props.nflPlayers\n\n    return (\n        <div className=\"matchup-container\">\n\n            <div className='roster-container'>\n                <h4>{player1.display_name} - {player1.points} points</h4>\n                <h3> Starters: </h3>\n                <ol>\n                    {player1.starters.map(player => {\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player1.players_points[player]} ` : 'Empty'}</li>\n                    })}\n                </ol>\n\n                <h3> Bench: </h3>\n                <ol>\n                    {player1Bench.map(player => {\n\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player1.players_points[player]}` : 'Empty'}</li>\n                    })}\n                </ol>\n            </div>\n\n            <p> vs </p>\n\n            <div className='roster-container'>\n                <h4>{player2.display_name} - {player2.points} points</h4>\n                <h3> Starters: </h3>\n                <ol>\n                    {player2.starters.map(player => {\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player2.players_points[player]}` : 'Empty'}</li>\n                    })}\n                </ol>\n\n                <h3> Bench: </h3>\n                <ol>\n                    {player2Bench.map(player => {\n                        const { position, first_name, last_name } = nflPlayers[player] || {}\n                        return <li>{player !== '0' ? `${position}) ${first_name} ${last_name} | ${player2.players_points[player]}` : 'Empty'}</li>\n                    })}\n                </ol>\n            </div>\n        </div>\n    )\n}\nexport default Matchup","import React, { useState } from 'react'\nimport Matchup from './Matchup'\n\nfunction Matchups(props) {\n    const { teams, nflPlayers, matchupWeeks } = props\n    console.log(matchupWeeks)\n    const [week, setWeek] = useState(0)\n\n    function getUsername(teams, rosterID) {\n        const username = teams.filter(team => team.roster_id === rosterID)\n        return username[0].display_name\n    }\n\n\n    // THE BUG IS HERE...NOT DYNAMIC WITH PLAYOFFS AND NULL MATCHUP IDS\n    function getMatchups(week) {\n        console.log(week)\n        const matchups = []\n        for (let i = 1; i < 6; i++) {\n            matchups.push(week.filter(player => {\n                player.display_name = getUsername(teams, player.roster_id)\n                return player.matchup_id === i\n            }))\n        }\n        return matchups\n    }\n\n    const allMatchups = matchupWeeks.map(week => {\n        return getMatchups(week)\n    })\n\n    const genMatchupDisplay = (weekOfMatchups) => {\n        console.log(weekOfMatchups)\n        return weekOfMatchups.map(matchup => {\n            return (\n                <Matchup matchup={matchup} nflPlayers={nflPlayers} />\n            )\n        })\n    }\n\n    const selector =\n        <div>\n            <label htmlFor=\"sorter\">Sort by: </label>\n            <select id=\"sorter\" value={week} onChange={(e) => setWeek(e.target.value)}>\n                {allMatchups.map((week, index) => {\n                    if (index < 14) {\n                        return <option value={index}>{`Week ${index + 1}`}</option>\n                    }\n                })}\n                <option>Playoffs Round 1</option>\n            </select >\n\n        </div >\n\n\n    return (\n        <div className=\"allMatchups-container\">\n            <h2>Matchups!</h2>\n            {selector}\n            {genMatchupDisplay(allMatchups[week])}\n        </div>\n    )\n}\n\nexport default Matchups\n\n","import { getAllByAltText } from '@testing-library/react'\nimport React, { useState, useEffect } from 'react'\n\nfunction HeadToHead(props) {\n    const { teams, matchupWeeks } = props\n    const [playerOne, setPlayerOne] = useState(1)\n    const [playerTwo, setPlayerTwo] = useState(7)\n    const [playerOneDropdown, setPlayerOneDropdown] = useState(teams.filter(team => team.roster_id !== playerTwo))\n    const [playerTwoDropdown, setPlayerTwoDropdown] = useState(teams.filter(team => team.roster_id !== playerOne))\n    const [playerOneMatches, setPlayerOneMatches] = useState([])\n    const [playerTwoMatches, setPlayerTwoMatches] = useState([])\n    const [matchUpHistory, setMatchUpHistory] = useState([])\n    const [matchUpStats, setMatchUpStats] = useState(\n        {\n            playerOneWins: 0,\n            playerTwoWins: 0,\n            playerOneTotalPoints: 0,\n            playerTwoTotalPoints: 0\n        }\n    )\n\n    console.log(matchUpStats)\n\n    useEffect(() => {\n        masterCalc()\n    }, [playerOne, playerTwo])\n\n    const masterCalc = () => {\n        const [playerOneMatchesTemp, playerTwoMatchesTemp] = calcMatches()\n        console.log(playerOneMatchesTemp, playerTwoMatchesTemp)\n        calcStats(getHeadToHeadHistory(playerOneMatchesTemp, playerTwoMatchesTemp))\n\n    }\n\n    const getHeadToHeadHistory = (player1Matches, player2Matches) => {\n        const matchups = []\n        for (let i = 0; i < player1Matches.length; i++) {\n            if (player1Matches[i].matchup_id === player2Matches[i].matchup_id) {\n                matchups.push([player1Matches[i], player2Matches[i]])\n            }\n        }\n        return matchups\n    }\n\n    function calcMatches() {\n\n        console.log(`inside calcMathces...playerOne is ${playerOne}`)\n        const playerOneMatchesTemp = matchupWeeks.map(week => {\n            return week.filter(team => {\n                return team.roster_id === playerOne\n            })\n        }).map(match => {\n            const [matchObj] = match\n            return matchObj\n        })\n\n        const playerTwoMatchesTemp = matchupWeeks.map(week => {\n            return week.filter(team => {\n                return team.roster_id === playerTwo\n            })\n        }).map(match => {\n            const [matchObj] = match\n            return matchObj\n        })\n        return ([playerOneMatchesTemp, playerTwoMatchesTemp])\n    }\n\n    function calcStats(matchups) {\n        console.log(matchups)\n        let stats = {\n\n            playerOneWins: 0,\n            playerTwoWins: 0,\n            playerOneTotalPoints: 0,\n            playerTwoTotalPoints: 0\n        }\n\n        matchups.forEach(match => {\n            stats.playerOneTotalPoints += parseInt(match[0].points.toFixed(2))\n            stats.playerTwoTotalPoints += parseInt(match[1].points.toFixed(2))\n            if (match[0].points > match[1].points) {\n                stats.playerOneWins += 1\n            }\n            else if (match[1].points > match[0].points) {\n                stats.playerTwoWins += 1\n            }\n\n        })\n        console.log(matchUpStats === stats)\n        setMatchUpStats({ ...stats })\n    }\n\n    const handleChange = (e, player) => {\n        if (player === 1) {\n            setPlayerOne(parseInt(e.target.value))\n            setPlayerTwoDropdown(teams.filter(team => team.roster_id !== parseInt(e.target.value)))\n        }\n        else {\n            setPlayerTwo(parseInt(e.target.value))\n            setPlayerOneDropdown(teams.filter(team => team.roster_id !== parseInt(e.target.value)))\n        }\n    }\n\n    return (\n        <div>\n\n            <h2>Head to Head! (regular season)</h2>\n            <div className='matchup-container'>\n\n                <div className='roster-container'>\n                    <div>\n                        <label htmlFor=\"sorter\">Player 1: </label>\n                        <select\n                            value={playerOne}\n                            data-id=\"1\"\n                            id=\"sorter\" onChange={(e) => handleChange(e, 1)}>\n                            {playerOneDropdown.map((team) => (\n                                <option value={team.roster_id} >\n                                    {`${team.display_name}, ${team.roster_id}`}\n                                </option>\n                            ))}\n                        </select >\n                        {/* 0 is playerOne's spot in array */}\n                        <p>Wins: {matchUpStats.playerOneWins}</p>\n                        <p>Total Points: {matchUpStats.playerOneTotalPoints}</p>\n                        <p>Biggest Win:</p>\n                    </div>\n                </div>\n\n                <p>vs</p>\n\n                <div className='roster-container'>\n                    <div>\n                        <label htmlFor=\"sorter2\">Player 2: </label>\n                        <select\n                            value={playerTwo}\n                            data-id=\"2\"\n                            id=\"sorter2\" onChange={(e) => handleChange(e, 2)}>\n                            {playerTwoDropdown.map((team) => (\n                                <option value={team.roster_id} >\n                                    {`${team.display_name}, ${team.roster_id}`}\n                                </option>\n                            ))}\n                        </select >\n                        {/* 1 is playerTwos spot in array */}\n                        <p>Wins: {matchUpStats.playerTwoWins}</p>\n                        <p>Total Points: {matchUpStats.playerTwoTotalPoints}</p>\n                        <p>Biggest Win:</p>\n                    </div >\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeadToHead\n\n\n// when roster team is selected => show that teams stats against the other team that is selected\n// stats to show\n//   -wins vs opponenent\n//    total points scored against opponent\n//   biggest blowout score\n//   biggest loss score\n//    \n//    highest scoring player against opponenet?","import React, { useEffect } from 'react'\n\nfunction Playoffs(props) {\n\n    const { matchupWeeks } = props\n\n\n    useEffect(() => {\n        console.log(matchupWeeks)\n        fetch('https://api.sleeper.app/v1/league/736382027170983936/winners_bracket')\n            .then(resp => resp.json())\n            .then(data => console.log(data))\n    }, [])\n    return (\n        <p>Playoffs!</p>\n    )\n}\n\nexport default Playoffs","export default __webpack_public_path__ + \"static/media/football.b7968ad0.webp\";","import React, { useState, useEffect } from 'react'\nimport Teams from './components/Teams'\nimport Nav from './components/Nav'\nimport {\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nimport About from './components/About'\nimport Matchups from './components/Matchups'\nimport HeadToHead from './components/HeadToHead'\nimport Playoffs from './components/Playoffs'\nimport football from './football.webp'\nimport MaxPointTotals from './components/MaxPointTotals';\n\n\nfunction App() {\n  const [teams, setTeams] = useState([])\n  const [nflPlayers, setNflPlayers] = useState({})\n  const [avgFpts, setAvgFpts] = useState(0)\n  const [avgFptsAgainst, setAvgFptsAgainst] = useState(0)\n  const [matchupWeeks, setMatchupWeeks] = useState([])\n  console.log(matchupWeeks)\n\n  async function getRosterInfo() {\n    //pull all team info - players, roster_id, settings(points scored, etc....), starters\n    const teams = await fetch('https://api.sleeper.app/v1/league/735291736863129600/rosters').then(resp => resp.json())\n    const getTeamNames = async () => {\n      return Promise.all(teams.map(async team => {\n        const { display_name } = await fetch(`https://api.sleeper.app/v1/user/${team.owner_id}`).then(resp => resp.json())\n        return { ...team, display_name }\n      }))\n    }\n    const updatedData = await getTeamNames()\n    const avgPointsScored = updatedData.map(team => {\n      return team.settings.fpts\n    }).reduce((a, b) => a + b)\n    const avgPointsScoredAgainst = updatedData.map(team => {\n      return team.settings.fpts_against\n    }).reduce((a, b) => a + b)\n    setTeams(updatedData)\n    setAvgFpts(avgPointsScored / updatedData.length)\n    setAvgFptsAgainst(avgPointsScoredAgainst / updatedData.length)\n  }\n\n  async function getNflPlayers() {\n    //large file => each key matches 'player' from getRosterInfo, name is stored under 'full_name'\n    const players = await fetch('./nflPlayers.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n    setNflPlayers(players)\n  }\n\n  async function getMatchupHistory() {\n    //this only works during active season => change week manually to 18 during offseason\n    const { week } = await fetch(\"https://api.sleeper.app/v1/state/nfl\").then(resp => resp.json())\n    console.log('current week of the NFL is week:', week)\n    // const getAllWeekMatchups = async () => {\n    //   return Promise.all()\n    // }\n    // i is the week....cannot be 0\n    for (let i = 1; i < 15; i++) {\n      const weekMatchups = await fetch(`https://api.sleeper.app/v1/league/735291736863129600/matchups/${i}`).then(resp => resp.json())\n      setMatchupWeeks(prevMatchUps => [...prevMatchUps, weekMatchups])\n    }\n\n  }\n\n  useEffect(() => {\n    getRosterInfo()\n    getNflPlayers()\n    getMatchupHistory()\n  }, [])\n\n  return (\n\n    <div className=\"app-container\">\n      <Nav />\n      <h1>AK Fantasy Football (only dynasty stats for now...)</h1>\n      <img alt=\"football\" src={football} />\n      <Routes>\n        <Route exact path='/' element={<Teams\n          teams={teams}\n          nflPlayers={nflPlayers}\n          avgFpts={avgFpts}\n          avgFptsAgainst={avgFptsAgainst}\n        />} />\n\n        <Route path='/matchups' element={<Matchups\n          teams={teams}\n          nflPlayers={nflPlayers}\n          avgFpts={avgFpts}\n          avgFptsAgainst={avgFptsAgainst}\n          matchupWeeks={matchupWeeks}\n        />} />\n\n        <Route path='/headtohead' element={<HeadToHead\n          teams={teams}\n          nflPlayers={nflPlayers}\n          matchupWeeks={matchupWeeks}\n        />} />\n\n        <Route path='/about' element={<About />} />\n\n        <Route path='/playoffs' element={<Playoffs\n          teams={teams}\n          nflPlayers={nflPlayers}\n          matchupWeeks={matchupWeeks}\n        />} />\n\n        {/* <Route path='/maxpointstotals' element={<MaxPointTotals\n          teams={teams}\n          nflPlayers={nflPlayers}\n          matchupWeeks={matchupWeeks}\n        />} /> */}\n      </Routes>\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}